var documenterSearchIndex = {"docs":
[{"location":"api/#MonteCarloMeasurements-API","page":"API Reference","title":"MonteCarloMeasurements API","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"","category":"page"},{"location":"api/","page":"API Reference","title":"API Reference","text":"Modules = [MonteCarloMeasurements]","category":"page"},{"location":"api/#MonteCarloMeasurements.AccumulatedSeries","page":"API Reference","title":"MonteCarloMeasurements.AccumulatedSeries","text":"AccumulatedSeries{T <: Number} <: MonteCarloMeasurement\n\nA type of MonteCarloMeasurement that accumulates statistics for a  given observable while performing an online binning analysis provided by OnlineLogBinning.jl.\n\n\n\n\n\n","category":"type"},{"location":"api/#MonteCarloMeasurements.MonteCarloMeasurement","page":"API Reference","title":"MonteCarloMeasurements.MonteCarloMeasurement","text":"MonteCarloMeasurement\n\nAbstract type that provides an interface for all MonteCarloMeasurements.\n\nwarning: Warning\nRequired Interface FunctionsThe following functions must have methods defined for each new MonteCarloMeasurement.push!: Move a new measurement into the MonteCarloMeasurement instance.\n\nnote: Note\nDefault Interface FunctionsThe following functions have a default method for any given MonteCarloMeasurement.     * name: Define a name for a given MonteCarloMeasurement \n\n\n\n\n\n","category":"type"},{"location":"api/#MonteCarloMeasurements.TimeSeries","page":"API Reference","title":"MonteCarloMeasurements.TimeSeries","text":"TimeSeries{T <: Number} <: MonteCarloMeasurement\n\nA type of MonteCarloMeasurement that stores the measurements in a  datastream::Vector{T}. Statistics are not accumulated in an online way.\n\n\n\n\n\n","category":"type"},{"location":"api/#MonteCarloMeasurements.name-Tuple{MonteCarloMeasurement}","page":"API Reference","title":"MonteCarloMeasurements.name","text":"name(meas::MonteCarloMeasurement)\n\nReturn the name defined by the input MonteCarloMeasurement.\n\njulia> meas = TimeSeries(\"Walter White\");\n\njulia> name(meas)\n\"Walter White\"\n\n\n\n\n\n","category":"method"},{"location":"api/#MonteCarloMeasurements.push!-Tuple{AccumulatedSeries, Any}","page":"API Reference","title":"MonteCarloMeasurements.push!","text":"push!(meas::AccumulatedSeries, value)\n\npush! a single value or many values into a [AccumulatedSeries] datastream.\n\n\n\n\n\n","category":"method"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = MonteCarloMeasurements","category":"page"},{"location":"#MonteCarloMeasurements","page":"Home","title":"MonteCarloMeasurements","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for MonteCarloMeasurements.","category":"page"}]
}
